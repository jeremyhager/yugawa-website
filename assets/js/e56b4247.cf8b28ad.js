"use strict";(self.webpackChunkyugawa=self.webpackChunkyugawa||[]).push([[805],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},318:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return m}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),o=["components"],i={id:"enrolling-foreman-ldap",title:"Enrolling Foreman",sidebar_label:"Enrolling Foreman"},s=void 0,p={unversionedId:"enrolling-foreman-ldap",id:"enrolling-foreman-ldap",title:"Enrolling Foreman",description:"Preparations",source:"@site/docs/enrolling-foreaman-ldap.md",sourceDirName:".",slug:"/enrolling-foreman-ldap",permalink:"/enrolling-foreman-ldap",draft:!1,editUrl:"https://github.com/jeremyhager/yugawa-website/edit/master/docs/enrolling-foreaman-ldap.md",tags:[],version:"current",frontMatter:{id:"enrolling-foreman-ldap",title:"Enrolling Foreman",sidebar_label:"Enrolling Foreman"},sidebar:"docs",previous:{title:"Creating users",permalink:"/creating-ldap-users"},next:{title:"Manual Enrollment",permalink:"/manual-enrollment-ldap"}},u={},m=[{value:"Preparations",id:"preparations",level:2},{value:"Install the necessary tools:",id:"install-the-necessary-tools",level:3},{value:"Run the ipa client installer:",id:"run-the-ipa-client-installer",level:3},{value:"Set up smart proxy",id:"set-up-smart-proxy",level:3},{value:"Re-run the installer to enable realms",id:"re-run-the-installer-to-enable-realms",level:3},{value:"Create realm in foreman",id:"create-realm-in-foreman",level:2},{value:"Associate realm with hostgroup",id:"associate-realm-with-hostgroup",level:3},{value:"Sources",id:"sources",level:2}],c={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"preparations"},"Preparations"),(0,l.kt)("h3",{id:"install-the-necessary-tools"},"Install the necessary tools:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum -y install ipa-client foreman-proxy ipa-admintools\n")),(0,l.kt)("h3",{id:"run-the-ipa-client-installer"},"Run the ipa client installer:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ipa-client-install\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="expected output" {5}',title:'"expected','output"':!0,"{5}":!0},"WARNING: ntpd time&date synchronization service will not be configured as\nconflicting service (chronyd) is enabled\nUse --force-ntpd option to disable it and force configuration of ntpd\n\nDiscovery was successful!\nClient hostname: foreman.internal.virtnet\nRealm: INTERNAL.VIRTNET\nDNS Domain: internal.virtnet\nIPA Server: ldap1.internal.virtnet\nBaseDN: dc=internal,dc=virtnet\n")),(0,l.kt)("p",null,"If it was configured successfully, refer to the following table:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Questions"),(0,l.kt)("th",{parentName:"tr",align:null},"Answers"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Continue to configure the system with these values? ","[no]",":"),(0,l.kt)("td",{parentName:"tr",align:null},"yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"User authorized to enroll computers:"),(0,l.kt)("td",{parentName:"tr",align:null},"admin")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Password for ",(0,l.kt)("a",{parentName:"td",href:"mailto:admin@INTERNAL.VIRTNET"},"admin@INTERNAL.VIRTNET"),":"),(0,l.kt)("td",{parentName:"tr",align:null},"[","admin password","]")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="expected output"',title:'"expected','output"':!0},"...\nConfiguring internal.virtnet as NIS domain.\nClient configuration complete.\nThe ipa-client-install command was successful\n")),(0,l.kt)("h3",{id:"set-up-smart-proxy"},"Set up smart proxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo foreman-prepare-realm admin realm-proxy\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="expected output"',title:'"expected','output"':!0},"-------------------------\nNumber of members added 1\n-------------------------\nKeytab successfully retrieved and stored in: freeipa.keytab\nRealm Proxy User:    realm-proxy\nRealm Proxy Keytab:  /home/jeremy/freeipa.keytab\n")),(0,l.kt)("p",null,"Copy/move the keytab file into ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/foreman-proxy")," and set the permissions:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mv /home/jeremy/freeipa.keytab /etc/foreman-proxy\nsudo chown foreman-proxy:foreman-proxy /etc/foreman-proxy/freeipa.keytab\n")),(0,l.kt)("p",null,"Enable realm via https:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="/etc/foreman-proxy/settings.d/realm.yml" {3}',title:'"/etc/foreman-proxy/settings.d/realm.yml"',"{3}":!0},"---\n# Can be true, false, or http/https to enable just one of the protocols\n:enabled: https\n\n# Available providers:\n#   realm_ad\n#   realm_freeipa\n:use_provider: realm_freeipa\n")),(0,l.kt)("p",null,"Trust the IPA certificate authority:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo cp /etc/ipa/ca.crt /etc/pki/ca-trust/source/anchors/ipa.crt\nsudo update-ca-trust enable\nsudo update-ca-trust\n")),(0,l.kt)("h3",{id:"re-run-the-installer-to-enable-realms"},"Re-run the installer to enable realms"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo foreman-installer --scenario katello --foreman-proxy-realm true \\\n    --foreman-proxy-realm-keytab /etc/foreman-proxy/freeipa.keytab \\\n    --foreman-proxy-realm-principal realm-proxy\n")),(0,l.kt)("h2",{id:"create-realm-in-foreman"},"Create realm in foreman"),(0,l.kt)("p",null,"Now that foreman is set up for realms, create a realm in foreman:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'hammer realm create --location "Default Location" \\\n    --name "INTERNAL.VIRTNET" \\\n    --organization "internal.virtnet" \\\n    --realm-proxy-id 1 \\\n    --realm-type "FreeIPA"\n')),(0,l.kt)("h3",{id:"associate-realm-with-hostgroup"},"Associate realm with hostgroup"),(0,l.kt)("p",null,"Update the hostgroup in foreman to include the realm id. This will automatically add the hosts within the group to the realm:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"hammer hostgroup update --id 1 --realm-id 1\n")),(0,l.kt)("h2",{id:"sources"},"Sources"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://access.redhat.com/documentation/en-us/red_hat_satellite/6.0/html/user_guide/chap-red_hat_satellite-user_guide-configuring_identity_management_in_red_hat_satellite"},"ldap guide for Satellite")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://theforeman.org/manuals/2.3/index.html#4.3.8Realm"},"Realm guide for foreman"))))}d.isMDXComponent=!0}}]);